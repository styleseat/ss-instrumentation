# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  toxtest:
    docker:
      - image: themattrix/tox
    steps:
      - checkout
      - run: pip install tox
      - run: tox

  deploy_stage:
    docker:
      - image: cimg/node:14.14
    steps:
      - checkout
      - run: sudo apt update && sudo apt install software-properties-common && sudo add-apt-repository ppa:deadsnakes/ppa
      - run: sudo apt install python3-pip && sudo apt install python3.8 && python3.8 -m pip install pip
      - run: npm ci
      - run:
          name: Serverless Deploy (stage)
          command: |
            export REDIS_HOST="$STAGE_REDIS_HOST"
            export AWS_METRIC_NAMESPACE="stage"
            export AWS_ACCESS_KEY_ID="$CIRCLECI_AWS_ACCESS_KEY_ID"
            export AWS_SECRET_ACCESS_KEY="$CIRCLECI_AWS_SECRET_ACCESS_KEY"
            npm run deploy -- --stage stage

  deploy_prod:
    docker:
      - image: cimg/node:14.14
    steps:
      - checkout
      - run: sudo apt update && sudo apt install software-properties-common && sudo add-apt-repository ppa:deadsnakes/ppa
      - run: sudo apt install python3-pip && sudo apt install python3.8 && python3.8 -m pip install pip
      - run: npm ci
      - run:
          name: Serverless Deploy (prod)
          command: |
            export REDIS_HOST="$PROD_REDIS_HOST"
            export AWS_METRIC_NAMESPACE="prod"
            export AWS_ACCESS_KEY_ID="$CIRCLECI_AWS_ACCESS_KEY_ID"
            export AWS_SECRET_ACCESS_KEY="$CIRCLECI_AWS_SECRET_ACCESS_KEY"
            npm run deploy -- --stage prod

workflows:
  version: 2
  ss_instrumentation:
    jobs:
      - toxtest
      - deploy_hold:
          type: approval
          requires:
            - toxtest
          filters:
            branches:
              only:
                - master
      - deploy_stage:
          requires:
            - deploy_hold
          context:
            - global
          filters:
            branches:
              only:
                - master
      - deploy_prod:
          requires:
            - deploy_hold
          context:
            - global
          filters:
            branches:
              only:
                - master
