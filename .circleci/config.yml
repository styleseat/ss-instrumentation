# yamllint disable rule:line-length

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  toxtest:
    docker:
      - image: themattrix/tox
    steps:
      - checkout
      - run: pip install tox
      - run: tox

  tag_release:
    docker:
      - image: cimg/python:3.8-node
    steps:
      - checkout
      - run:
          name: Tag release
          command: |
            set -euxo pipefail

            git config --global user.name "CircleCI"
            git config --global user.email "engineering@styleseat.com"

            VERSION=$(python3 setup.py --version)

            # Update version in package.json
            if npm --verbose version --no-git-tag-version "$VERSION"; then
              git add package.json package-lock.json
              git commit -m "npm: v$VERSION"
            fi

            git push origin release

            # Create tag if doesn't exist, push
            git tag "v$VERSION" || true
            git push origin "v$VERSION" || true

            SHA=$(git rev-parse HEAD)

            # Merge release to dev
            git checkout dev
            git reset --hard origin/dev
            git merge --no-edit --no-commit "$SHA"
            git push origin dev

  deploy_stage:
    docker:
      - image: cimg/python:3.8-node
    steps:
      - checkout
      - run: npm ci
      - run:
          name: Serverless Deploy (stage)
          command: |
            export REDIS_HOST="$STAGE_REDIS_HOST"
            export AWS_METRIC_NAMESPACE="stage"
            export AWS_ACCESS_KEY_ID="$CIRCLECI_AWS_ACCESS_KEY_ID"
            export AWS_SECRET_ACCESS_KEY="$CIRCLECI_AWS_SECRET_ACCESS_KEY"
            npm run deploy -- --stage stage

      - run:
          name: Merge stage to dev
          command: |
            SHA=$(git rev-parse HEAD)
            git checkout dev
            git reset --hard origin/dev
            git merge --no-edit --no-commit "$SHA"
            git push origin dev

  deploy_prod:
    docker:
      - image: cimg/python:3.8-node
    steps:
      - checkout
      - run: npm ci
      - run:
          name: Serverless Deploy (prod)
          command: |
            export REDIS_HOST="$PROD_REDIS_HOST"
            export AWS_METRIC_NAMESPACE="prod"
            export AWS_ACCESS_KEY_ID="$CIRCLECI_AWS_ACCESS_KEY_ID"
            export AWS_SECRET_ACCESS_KEY="$CIRCLECI_AWS_SECRET_ACCESS_KEY"
            npm run deploy -- --stage prod

      - run:
          name: Merge prod to dev
          command: |
            SHA=$(git rev-parse HEAD)
            git checkout dev
            git reset --hard origin/dev
            git merge --no-edit --no-commit "$SHA"
            git push origin dev

workflows:
  version: 2
  ss_instrumentation:
    jobs:
      - toxtest
      - tag_release:
          requires:
            - toxtest
          context:
            - global
          filters:
            branches:
              only:
                - release
      - deploy_hold:
          type: approval
          requires:
            - toxtest
          filters:
            branches:
              only:
                - stage
                - prod
      - deploy_stage:
          requires:
            - deploy_hold
          context:
            - global
          filters:
            branches:
              only:
                - stage
      - deploy_prod:
          requires:
            - deploy_hold
          context:
            - global
          filters:
            branches:
              only:
                - prod
